service: s3-video-transcoder

provider:
  name: aws
  runtime: nodejs12.x
  stage: staging
  region: us-east-1

custom:
  functionMemoryLimit: 512
  videoInputBucketName: artisto-raw-video-${self:provider.stage}
  videoOutputBucketName: artisto-optimized-video-${self:provider.stage}
  videoTranscodingPipelineId: 1635602484427-gix9l5

plugins:
  - serverless-iam-roles-per-function
  - serverless-plugin-existing-s3

functions:
  s3VideoTranscoder:
    handler: src/upload.handler
    name: s3-video-transcoder
    description: A lambda function that transcodes a video file once uploaded to an S3 bucket based on object created trigger.
    timeout: 60 # seconds
    memorySize: ${self:custom.functionMemoryLimit} # mb
    events:
      - s3:
          bucket: ${self:custom.videoInputBucketName}
          event: s3:ObjectCreated:*
          existing: true
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - 's3:PutBucketNotification'
        Resource: arn:aws:s3:::${self:custom.videoInputBucketName}/*

      - Effect: Allow
        Action:
          - s3:GetObject
          - s3:PutObject
        Resource: arn:aws:s3:::*

      - Effect: Allow
        Action:
          - elastictranscoder:Read*
          - elastictranscoder:List*
          - elastictranscoder:*Job
          - elastictranscoder:*Preset
          - s3:List*
          - iam:List*
          - sns:List*
        Resource: '*'

      - Effect: Allow
        Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
        Resource: '*'

      - Effect: Allow
        Action:
          - s3:ListBucket
        Resource:
          - arn:aws:s3:::${self:custom.videoInputBucketName}

      - Effect: 'Allow'
        Action:
          - s3:PutObject
        Resource:
          - arn:aws:s3:::${self:custom.videoInputBucketName}/*

    environment:
      BUCKET_NAME: ${self:custom.videoInputBucketName}
      PIPELINE_ID: ${self:custom.videoTranscodingPipelineId}
      TRANSCODER_REGION: us-east-1

resources:
  Resources:
    FileBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.videoInputBucketName}
        AccessControl: PublicRead

    VideoTranscodedBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.videoOutputBucketName}
